# Copyright 2024 "Google LLC"
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

blueprint_name: gke-a3-ultra

vars:
  project_id: # add this
  deployment_name: # add this
  region: # add this
  zone: # add this
  # Cidr block containing the IP of the machine calling terraform.
  # The following line must be updated for this example to work.
  authorized_cidr: # add this
  # The name of the compute engine reservation in the form of
  # <reservation-name>
  # To target a BLOCK_NAME, the name of the extended reservation
  # can be inputted as <reservation-name>/reservationBlocks/<reservation-block-name>
  enable_flex_start: true
  enable_queued_provisioning: true
  kueue_configuration_path: $(ghpc_stage("./kueue-configuration.yaml.tftpl"))
  gib_installer_path: $(ghpc_stage("./nccl-installer.yaml.tftpl"))
  system_node_pool_disk_size_gb: 300
  a3ultra_node_pool_disk_size_gb: 100
  accelerator_type: nvidia-h200-141gb
  version_prefix: "1.32."

  enable_periodic_health_checks: false # Make this true to run CHS (healthchecks)
  health_check_schedule: "0 0 * * 0" # Run the health check at 12:00 AM (midnight) every Sunday

  permissions_file_staged_path: $(ghpc_stage("./chs-permissions.yaml.tftpl"))
  chs_output_bucket_name: chs-result
  chs_pvc_claim_name: chs-output-pvc
  chs_cronjob_rendered_path: $(ghpc_stage("./chs-cronjob.yaml.tftpl"))
  chs_pvc_rendered_path: $(ghpc_stage("./chs-pvc.yaml.tftpl"))

  gpu_nominal_quota: 16


deployment_groups:
- group: primary
  modules:
  - id: gke-a3-ultra-net-0
    source: modules/network/vpc
    settings:
      network_name: $(vars.deployment_name)-net-0
      ips_per_nat: 6
      subnetworks:
      - subnet_name: $(vars.deployment_name)-sub-0
        subnet_region: $(vars.region)
        subnet_ip: 192.168.0.0/18
      secondary_ranges_list:
      - subnetwork_name: $(vars.deployment_name)-sub-0
        ranges:
        - range_name: pods
          ip_cidr_range: 10.4.0.0/14
        - range_name: services
          ip_cidr_range: 10.0.32.0/20
      firewall_rules:
      - name: $(vars.deployment_name)-internal-0
        ranges: [192.168.0.0/16]
        allow:
        - protocol: tcp
          ports: ["0-65535"]
        - protocol: udp
          ports: ["0-65535"]
        - protocol: icmp

  - id: gke-a3-ultra-net-1
    source: modules/network/vpc
    settings:
      network_name: $(vars.deployment_name)-net-1
      ips_per_nat: 6
      subnetworks:
      - subnet_name: $(vars.deployment_name)-sub-1
        subnet_region: $(vars.region)
        subnet_ip: 192.168.64.0/18
      firewall_rules:
      - name: $(vars.deployment_name)-internal-1
        ranges: [192.168.0.0/16]
        allow:
        - protocol: tcp
          ports: ["0-65535"]
        - protocol: udp
          ports: ["0-65535"]
        - protocol: icmp

  - id: gke-a3-ultra-rdma-net
    source: modules/network/gpu-rdma-vpc
    settings:
      network_name: $(vars.deployment_name)-rdma-net
      network_profile: https://www.googleapis.com/compute/beta/projects/$(vars.project_id)/global/networkProfiles/$(vars.zone)-vpc-roce
      network_routing_mode: REGIONAL
      subnetworks_template:
        name_prefix: $(vars.deployment_name)-rdma-sub
        count: 8
        ip_range: 192.168.128.0/18
        region: $(vars.region)

  - id: node_pool_service_account
    source: community/modules/project/service-account
    settings:
      name: gke-np-sa
      project_roles:
      - logging.logWriter
      - monitoring.metricWriter
      - monitoring.viewer
      - stackdriver.resourceMetadata.writer
      - storage.objectViewer
      - artifactreg